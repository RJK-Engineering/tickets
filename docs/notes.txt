
removed, don't know if necessary:
resources/js/bootstrap.js
    import axios from 'axios';
    window.axios = axios;

    window.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';


after executing "php artisan install:api":
API scaffolding installed. Please add the [Laravel\Sanctum\HasApiTokens] trait to your User model.

https://laravel.com/docs/11.x/authentication
- Guards define how users are authenticated for each request. For example, Laravel ships with a session guard which maintains state using session storage and cookies.
- Providers define how users are retrieved from your persistent storage.
- authentication configuration file: config/auth.php
- Guards and providers (authentication) should not be confused with "roles" and "permissions" (authorization)
- Laravel Breeze starter kit: creates authentication controllers, routes, and views
- built-in authentication and session services: Auth and Session facades, cookie-based 

Authentication Services
- browser: login form, store authenticated user in session, session using cookie
    - Application Starter Kits: Laravel Breeze, Laravel Jetstream, and Laravel Fortify.
- API: remote service sends API token on each request
    - API Authentication Services: Passport and Sanctum.
- not mutually exclusive.

- For monolithic Laravel application accessed using a browser:
    - built-in authentication services
- For API that will be consumed by third parties, API/SPA/mobile authentication
    - Passport or Sanctum to provide API token authentication

Sanctum 
- will first determine if the request includes a session cookie that references an authenticated session.
- calls Laravel's built-in authentication services
    - If the request is not being authenticated via a session cookie: check for API token on request
- implementation
    - manually implement your own backend authentication routes
        - https://laravel.com/docs/11.x/authentication#authenticating-users
    - or utilize Laravel Fortify

Route middleware can be used to only allow authenticated users to access a given route.
- Route::get( ... )->middleware('auth');
- Route::get( ... )->middleware('auth:admin'); //use "admin" guard

Manually authenticate users
- Access Laravel's authentication services via the Auth facade
    - class LoginController extends Controller
        - use Illuminate\Support\Facades\Auth;
    
verder lezen:
vanaf https://laravel.com/docs/11.x/authentication#authenticating-users
https://laravel.com/docs/11.x/sanctum
